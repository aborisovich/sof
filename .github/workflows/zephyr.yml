---

name: Zephyr

# 'workflow_dispatch' allows running this workflow manually from the
# 'Actions' tab
# yamllint disable-line rule:truthy
on: [push, pull_request, workflow_dispatch, workflow_call]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # Using groups to avoid spamming the small results box with too
        # many lines. Pay attention to COMMAS.
        IPC_platforms: [
          # - IPC3 default
          imx8 imx8x imx8m,
          tgl tgl-h,  # UNSUPPORTED! Will be removed
          # - IPC4 default
          mtl,
          # Temporary testbed for Zephyr development.
          -i IPC4 tgl tgl-h,
        ]
        zephyr_revision: [
          manifest_revision,
          "https://github.com/zephyrproject-rtos/zephyr  main",
        ]

    steps:
      - uses: actions/checkout@v3
        # Download a full clone to fix `git describe`, sof_version.h and
        # build reproducibility. sof.git is still small.
        # This is especially useful for daily builds (but not just).
        with:
          fetch-depth: 0
          path: ./workspace/sof

      # As of December 2022 `--shallow-exclude=v3.2.0-rc3` fixes `git
      # describe`, Zephyr's version.h and build reproducibility while
      # downloading about 200MB less compared to a full clone.
      #
      # Ideally, the --shallow-exclude= argument should be regularly
      # bumped whenever SOF upgrades Zephyr to keep this as fast as
      # possible.
      # In a bigger Zephyr future maybe we could move to a more permanent
      # git fetch --shallow-since='5 months ago' because Zephyr follows
      # a "roughly 4-month release" but for now that saves only 100MB
      # https://docs.zephyrproject.org/latest/project/release_process.html
      - name: west clones
        run: pip3 install west && cd workspace/sof/ && west init -l &&
               west update --narrow --fetch-opt=--depth=5 &&
               git -C ../zephyr fetch --shallow-exclude=v3.2.0-rc3

      - name: select zephyr revision
        run: cd workspace/zephyr/ &&
             if [ 'manifest_revision' != '${{ matrix.zephyr_revision }}' ]; then
                 git fetch ${{ matrix.zephyr_revision }} &&
                 git checkout FETCH_HEAD;
             fi &&
             git log --oneline -n 5 --decorate --graph --no-abbrev-commit

      # https://github.com/zephyrproject-rtos/docker-image
      # Note: env variables can be passed to the container with
      # -e https_proxy=...
      - name: build
        run: cd workspace && ./sof/zephyr/docker-run.sh
             ./sof/zephyr/docker-build.sh --cmake-args=-DEXTRA_CFLAGS=-Werror
             --cmake-args=--warn-uninitialized ${{ matrix.IPC_platforms }}

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        # Using groups to avoid spamming the small results box with too
        # many lines. Pay attention to COMMAS.
        platforms: [
          # - IPC3 default
          imx8 imx8x imx8m,
          tgl tgl-h,  # UNSUPPORTED! Will be removed
          # - IPC4 default
          mtl,
          # Very few IPC3 platforms support IPC4 too.
          -i IPC4 tgl tgl-h,
        ]
        zephyr_revision: [
          manifest_revision,
          main,
        ]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: ./workspace/sof

      # Cache artifacts so we do not overload external servers with downloads
      # Remember to change step key if you change the tools so old cache is not restored,
      # or delete cache manually in Github Actions tab
      - name: Cache unzip
        id: cache-unzip
        uses: actions/cache@v3.1.0-beta.3
        with:
          path: unzip-5.51-1-bin.zip
          key: ${{ runner.os }}-cache-unzip-5-51-1

      - name: Cache wget
        id: cache-wget
        uses: actions/cache@v3.1.0-beta.3
        with:
          path: wget-1.11.4-1-bin.zip
          key: ${{ runner.os }}-cache-wget-1-11-4-1

      - name: Cache Zephyr SDK
        id: cache-zephyr-sdk
        uses: actions/cache@v3.1.0-beta.3
        with:
          path: zephyr-sdk-0.15.2_windows-x86_64.zip
          key: ${{ runner.os }}-cache-zephyr-sdk-0-15-2

      # Try restoring needed artifacts from Cache
      - if: ${{ steps.cache-unzip.outputs.cache-hit != 'true' }}
        name: Download unzip
        run: |
          curl -L -o unzip-5.51-1-bin.zip `
          https://gnuwin32.sourceforge.net/downlinks/unzip-bin-zip.php

      - if: ${{ steps.cache-wget.outputs.cache-hit != 'true' }}
        name: Download wget
        run: |
          curl -L -O http://downloads.sourceforge.net/gnuwin32/wget-1.11.4-1-bin.zip

      - if: ${{ steps.cache-zephyr-sdk.outputs.cache-hit != 'true' }}
        name: Download Zephyr SDK
        run: |  # yamllint disable-line rule:line-length
          curl -L -O `
          https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/zephyr-sdk-0.15.2_windows-x86_64.zip

      # Unzips every .zip package to directory matching its name without extension
      - name: Unzip downloaded packages
        run: 7z x *.zip -o*

      - name: Add unzip to system PATH
        run: |
          echo "${{ github.workspace }}\unzip-5.51-1-bin\bin" | `
          Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Add wget to system PATH
        run: |
          echo "${{ github.workspace }}\wget-1.11.4-1-bin\bin" | `
          Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # Install Zephyr SDK - all toolchains including Host Tools
      # and registering CMake package in the registry
      - name: Install Zephyr SDK
        run: zephyr-sdk-0.15.2_windows-x86_64\zephyr-sdk-0.15.2\setup.cmd /t all /h /c

      # Cache dependency path is always relative to ${{ github.workspace }}
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: "**\requirements*.txt"

      - name: West install
        run: pip3 install west

      - if: ${{ matrix.zephyr_revision }} == 'main'
        name: Set Zephyr revision main
        working-directory: ${{ github.workspace }}\workspace
        run: |
          ((Get-Content -path .\sof\submanifests\sof-ci-jenkins\zephyr-override-template.yml -Raw)`
          -replace '=sof_zephyr_revision_override=','main') | `
          Set-Content -path .\sof\submanifests\zephyr-override.yml

      - name: West clone
        working-directory: ${{ github.workspace }}\workspace
        run: west init -l sof && west update

      # All requirements will be satisfied if the restored cache matches existing state
      - name: Validate python PIP cache
        working-directory: ${{ github.workspace }}\workspace
        run: pip install -r zephyr\scripts\requirements.txt

      # MSYS2 provides gcc x64_86 toolchain & openssl
      - name: Initialize MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          install: gcc openssl-devel
          path-type: inherit

      - name: Build
        shell: msys2 {0}
        working-directory: ${{ github.workspace }}\workspace
        run: python sof/scripts/xtensa-build-zephyr.py
          --cmake-args=-DEXTRA_CFLAGS=-Werror
          --cmake-args=--warn-uninitialized ${{ matrix.platforms }}
